class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        new_node = Node(data)

        if self.head is None:
            self.head = new_node
            return

        current = self.head
        while current.next is not None:
            current = current.next

        current.next = new_node

    def prepend(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def delete(self, data):
        if self.head is None:
            print("List is empty.")
            return

        if self.head.data == data:
            self.head = self.head.next
            return

        current = self.head
        while current.next is not None:
            if current.next.data == data:
                current.next = current.next.next
                return
            current = current.next

        print(f"Value {data} not found in the list.")

    def display(self):
        if self.head is None:
            print("List is empty.")
            return

        current = self.head
        while current is not None:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

ll = SinglyLinkedList()

ll.append(10)
ll.append(20)
ll.append(30)

ll.display()         

ll.prepend(5)
ll.display()         

ll.delete(20)
ll.display()         

ll.delete(100)       

    

